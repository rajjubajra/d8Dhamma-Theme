<div id="page-wrapper">
   <!-- The video -->
   <video autoplay muted loop id="myVideo">
      <source src="{{url('<front>')}}themes/contrib/bootstrap_sass/video/golden-trees.mp4" type="video/mp4">
    </video> 
  <div id="page landing-page">
   
{# HEADER #}
    {% include '@bootstrap_sass/includes/header.html.twig' %}
{# HIGHLIGHTED #}
    {% include '@bootstrap_sass/includes/highlighted.html.twig' %}
{# FEATURED-TOP #}
    {% include '@bootstrap_sass/includes/featured-top.html.twig' %}


{# MAIN #}      
    <div class="container-fluid">
      <div class="row">
        <div class="front-page">
         
          <div class="items">
            
            <ul id="time" class="time"></ul>
              
            <h1><span id="greetings" class="greetings">Hi!</span></h1>

            
           
            <div id="progress-bar">
                  <ul class="medi-time">
                    <li><button id="timeslot" dataTime="2">2</button></li>
                    <li><button id="timeslot" dataTime="5">5</button></li>
                    <li><button id="timeslot" dataTime="15">15</button></li>
                    <li><button id="timeslot" dataTime="30">30</button></li>
                    <li><button id="timeslot" dataTime="60">60</button></li>
                  </ul>
                  <div>Please choose time slot for meditation</div>
            </div>
            <div class="buddha-bachana">
              <h3>Dhammapada</h3>
              <p id="dhammapada"></p>
            </div> 
          </div>

         
          
        </div>        
      </div>
    </div>


    {# TODO LIST #}
 <div  class="todo-block hide">
  <div class="header">
        <div class="clear"><i class="fas fa-sync-alt"></i></div>    
        <div id="date" class="date"></div>
        <div id="hide-note"><i class="fas fa-angle-down"></i></div>   
  </div>
  <div class="container">    
      <div class="content">
        <ul id="list">
          <!-- <li class="item">
            <i class="far fa-circle"></i>
            <i class="text">drink tea</i>
            <i class="far fa-trash-alt" job="delete"></i>
          </li> -->
        </ul>
      </div>
  </div>
  <div class="add-to-do">
      <i class="fa fa-plus-circle"></i>
      <input type="text" id="input" placeholder="add to do" >
  </div>
</div>





{# FEATURED-BOTTOM #}
    {% include '@bootstrap_sass/includes/featured-bottom.html.twig' %}
{# FOOTER #}  
    {% include '@bootstrap_sass/includes/footer.html.twig' %}
  </div>
</div>


<script>
console.log('url',window.location);
let windowInnerWith = window.innerWidth;
console.log(windowInnerWith);
document.getElementById('myVideo').style.width = windowInnerWith;

    function fancyTimeFormat(time)
    {   
        // Hours, minutes and seconds
        var hrs = ~~(time / 3600);
        var mins = ~~((time % 3600) / 60);
        var secs = ~~time % 60;
    
        // Output like "1:01" or "4:03:59" or "123:03:59"
        var ret = "";
    
        if (hrs > 0) {
            ret += "" + hrs + ":" + (mins < 10 ? "0" : "");
        }
    
        ret += "" + mins + ":" + (secs < 10 ? "0" : "");
        ret += "" + secs;
        return ret;
    }  


function countDown(e){
 
  let button = e.target.attributes.id.value;
  let dataTime = e.target.attributes.dataTime.value * 60;
  //console.log('target value ',e.target.attributes.dataTime.value);
  var timeleft = dataTime;
  var bell_start = new Audio("{{url('<front>')}}themes/contrib/bootstrap_sass/sound/bell_start.mp3");
  var bell_end = new Audio("{{url('<front>')}}themes/contrib/bootstrap_sass/sound/bell_end.mp3");
    
      var downloadTimer = setInterval(function(){
        
        document.getElementById("progress-bar").innerHTML = 
        `
        <div id="timeLeft"></div>
        <div><a href="" class="stop"><i class="far fa-stop-circle"></i></a></div>
        `;
        
        timeleft === 5 ? bell_end.play() : console.log('do nothing');
        document.getElementById("progress-bar").value = dataTime - timeleft;
        document.getElementById("timeLeft").innerHTML = fancyTimeFormat(timeleft);
        timeleft -= 1;
        if(timeleft < 0)
          clearInterval(downloadTimer);
      }, 1000);
      bell_start.play();
}


window.addEventListener('click', countDown);





/** 
***** Footer style for front page only  ******/
const footer = document.querySelector("footer");
footer.style.position = 'absolute';
footer.style.bottom = '0px';
footer.style.width = '100%';






/** 
******* TODO NOTE *************************/
//todo note button at footer
const todoNoteBtn = document.getElementById('todo-note-btn');
console.log(todoNoteBtn);
//todo note block
const todoNote = document.querySelector(".todo-block");

//hide note from the Note block Top bar DownArrow Btn
const downArrBtn = document.querySelector("#hide-note");
downArrBtn.addEventListener('click',function(){
  todoNote.classList.add("hide");
})
//toggle Todo-Note
todoNoteBtn.addEventListener('click', function(){
  console.log('click works'); 
  todoNote.classList.toggle("hide");
});



// Select the Elements
const clear = document.querySelector(".clear");
const dateElement = document.getElementById("date");
const list = document.getElementById("list");
const input = document.getElementById("input");
const todoNoteBtn = document.getElementById("todo-note-btn");

// Classes names
const CHECK = "fa-check-circle";
const UNCHECK = "fa-circle";
const LINE_THROUGH = "lineThrough";

// Variables
let LIST, id;

// get item from localstorage
let data = localStorage.getItem("TODO");

// check if data is not empty
if(data){
    LIST = JSON.parse(data);
    id = LIST.length; // set the id to the last one in the list
    loadList(LIST); // load the list to the user interface
}else{
    // if data isn't empty
    LIST = [];
    id = 0;
}

// load items to the user's interface
function loadList(array){
    array.forEach(function(item){
        addToDo(item.name, item.id, item.done, item.trash);
    });
}

// clear the local storage
clear.addEventListener("click", function(){
    localStorage.clear();
    location.reload();
});

// Show todays date
const options = {weekday : "long", month:"short", day:"numeric"};
const today = new Date();

dateElement.innerHTML = today.toLocaleDateString("en-US", options);



// add to do function
function addToDo(toDo, id, done, trash){
    
  if(trash){ return; }
  
  const DONE = done ? CHECK : UNCHECK;
  const LINE = done ? LINE_THROUGH : "";
  
  const item = `<li class="item">
                  <i class="far ${DONE}" job="complete" id="${id}"></i>
                  <span class="text ${LINE}">${toDo}</span>
                  <i class="far fa-trash-alt" job="delete" id="${id}"></i>
                </li>
              `;
  
  const position = "beforeend";
  
  list.insertAdjacentHTML(position, item);
}




// add an item to the list user the enter key
document.addEventListener("keyup",function(even){
  if(event.keyCode === 13){

      const toDo = input.value;
      
      // if the input isn't empty
      if(toDo){
          addToDo(toDo, id, false, false);
          
          LIST.push({
              name : toDo,
              id : id,
              done : false,
              trash : false
          });
          
          // add item to localstorage ( this code must be added where the LIST array is updated)
          localStorage.setItem("TODO", JSON.stringify(LIST));
          
          id++;
      }
      input.value = "";
  }
});

// complete to do
function completeToDo(element){
  element.classList.toggle(CHECK);
  element.classList.toggle(UNCHECK);
  element.parentNode.querySelector(".text").classList.toggle(LINE_THROUGH);
  
  LIST[element.id].done = LIST[element.id].done ? false : true;
}

// remove to do
function removeToDo(element){
  element.parentNode.parentNode.removeChild(element.parentNode);
  
  LIST[element.id].trash = true;
}

// run function for complete/delete the the task items created on click on icon

list.addEventListener("click", function(event){
  const element = event.target; // return the clicked element inside list
  const elementJob = element.attributes.job.value; // complete or delete
  
  if(elementJob == "complete"){
      completeToDo(element);
  }else if(elementJob == "delete"){
      removeToDo(element);
  }
  
  // add item to localstorage ( this code must be added where the LIST array is updated)
  localStorage.setItem("TODO", JSON.stringify(LIST));
});



console.log(todoNote);


/** TODO NOTE APP CLOSED */

</script>

